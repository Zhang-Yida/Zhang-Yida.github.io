{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./src/views/demo/table-with-copycell.vue?da31","webpack:///src/views/demo/table-with-copycell.vue","webpack:///./src/views/demo/table-with-copycell.vue?b96a","webpack:///./src/views/demo/table-with-copycell.vue"],"names":["$export","__webpack_require__","$find","KEY","forced","Array","P","F","findIndex","callbackfn","this","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","attrs","table-columns","tableColumns","table-data","tableData","table-attrs","tableAttrs","scopedSlots","_u","key","fn","slotProps","model","row","name","option","type","editable","editmode","on","update:model","$event","$set","paste","handleDataPaste","$index","column","hello","selectOption","component","automaticDropdown","searchModel","widget-list","widgetList","form-layout","labelPosition","labelWidth","native-type","click","handleDataSearch","_v","staticRenderFns","table_with_copycellvue_type_script_lang_js_","data","label","test","testchild1","testChild","border","value","prop","clearable","formItem","span","slotname","computed","align","width","formatter","cellValue","index","methods","console","log","rowIndex","event","clipboardData","window","clipboardDataText","getData","dataMatrix","$utils","matrix","columnName","property","columnIndex","item","insertColumns","drop","insertColumnsNameList","map","currentRowData","JSON","parse","stringify","rowData","colIndex","splice","demo_table_with_copycellvue_type_script_lang_js_","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-1918328d.f0ed9af6.js","sourcesContent":["'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('simple-table',{attrs:{\"table-columns\":_vm.tableColumns,\"table-data\":_vm.tableData,\"table-attrs\":_vm.tableAttrs},scopedSlots:_vm._u([{key:\"name\",fn:function(slotProps){return [_c('widget-item',{attrs:{\"model\":slotProps.row.name,\"option\":{ type: 'el-input' },\"editable\":true,\"editmode\":false},on:{\"update:model\":function($event){return _vm.$set(slotProps.row, \"name\", $event)},\"paste\":function($event){return _vm.handleDataPaste(slotProps.$index, slotProps.column, $event)}}})]}},{key:\"hello\",fn:function(slotProps){return [_c('widget-item',{attrs:{\"model\":slotProps.row.hello,\"option\":{ type: 'el-select', option: _vm.selectOption, component: { automaticDropdown: true } },\"editable\":true,\"editmode\":false},on:{\"update:model\":function($event){return _vm.$set(slotProps.row, \"hello\", $event)},\"paste\":function($event){return _vm.handleDataPaste(slotProps.$index, slotProps.column, $event)}}})]}}])},[[_c('simple-form',{attrs:{\"model\":_vm.searchModel,\"widget-list\":_vm.widgetList,\"form-layout\":{ labelPosition: 'right', labelWidth: '60px' }},scopedSlots:_vm._u([{key:\"operation\",fn:function(slotProps){return [_c('el-button',{attrs:{\"native-type\":\"submit\"},on:{\"click\":_vm.handleDataSearch}},[_vm._v(\"\\n          Search\\n        \")]),_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"\\n          Create\\n        \")])]}}])})]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <simple-table\r\n    :table-columns=\"tableColumns\"\r\n    :table-data=\"tableData\"\r\n    :table-attrs=\"tableAttrs\"\r\n  >\r\n    <template>\r\n      <simple-form\r\n        :model=\"searchModel\"\r\n        :widget-list=\"widgetList\"\r\n        :form-layout=\"{ labelPosition: 'right', labelWidth: '60px' }\"\r\n      >\r\n        <template #operation=\"slotProps\">\r\n          <el-button\r\n            native-type=\"submit\"\r\n            @click=\"handleDataSearch\"\r\n          >\r\n            Search\r\n          </el-button>\r\n          <el-button type=\"primary\">\r\n            Create\r\n          </el-button>\r\n        </template>\r\n      </simple-form>\r\n    </template>\r\n    <template #name=\"slotProps\">\r\n      <widget-item\r\n        :model.sync=\"slotProps.row.name\"\r\n        :option=\"{ type: 'el-input' }\"\r\n        :editable=\"true\"\r\n        :editmode=\"false\"\r\n        @paste=\"handleDataPaste(slotProps.$index, slotProps.column, $event)\"\r\n      />\r\n    </template>\r\n    <template #hello=\"slotProps\">\r\n      <widget-item\r\n        :model.sync=\"slotProps.row.hello\"\r\n        :option=\"{ type: 'el-select', option: selectOption, component: { automaticDropdown: true } }\"\r\n        :editable=\"true\"\r\n        :editmode=\"false\"\r\n        @paste=\"handleDataPaste(slotProps.$index, slotProps.column, $event)\"\r\n      />\r\n    </template>\r\n  </simple-table>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n  name: 'Table',\r\n  data () {\r\n    return {\r\n      searchModel: { },\r\n\r\n      tableData: [\r\n        {\r\n          label: '1123',\r\n          test: 'test',\r\n          testchild1: '----',\r\n          testChild: '___',\r\n          name: '123'\r\n        },\r\n        {\r\n          label: '2222',\r\n          test: 'test',\r\n          testchild1: '----',\r\n          testChild: '___'\r\n        },\r\n        {\r\n          label: '2222',\r\n          test: 'test',\r\n          testchild1: '----',\r\n          testChild: '___'\r\n        }\r\n      ],\r\n      tableAttrs: {\r\n        border: true\r\n      },\r\n\r\n      selectOption: [\r\n        {\r\n          value: 'base',\r\n          label: 'Base Select'\r\n        },\r\n        {\r\n          value: 'advance',\r\n          label: 'Adv Select'\r\n        }\r\n      ],\r\n\r\n      widgetList: [\r\n        {\r\n          prop: 'label',\r\n          type: 'el-input',\r\n          component: { clearable: true },\r\n          formItem: {\r\n            label: 'label'\r\n          }\r\n        },\r\n        {\r\n          prop: 'name',\r\n          type: 'el-input',\r\n          component: { clearable: true },\r\n          formItem: {\r\n            label: 'name'\r\n          }\r\n        },\r\n        {\r\n          prop: 'age',\r\n          type: 'el-input',\r\n          component: { clearable: true },\r\n          formItem: {\r\n            label: 'age'\r\n          }\r\n        },\r\n        {\r\n          span: 6,\r\n          slotname: 'operation',\r\n          formItem: {\r\n            labelWidth: '0px'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    tableColumns () {\r\n      return [\r\n        {\r\n          type: 'index',\r\n          align: 'right'\r\n        },\r\n        {\r\n          label: 'label',\r\n          prop: 'label',\r\n          width: '200',\r\n          formatter: (row, column, cellValue, index) => {\r\n          // 字典翻译或其它对值的处理\r\n            return cellValue\r\n          },\r\n          slotname: 'label'\r\n        },\r\n        {\r\n          label: 'hello',\r\n          prop: 'hello',\r\n          width: '200',\r\n          slotname: 'hello'\r\n        },\r\n        {\r\n          label: 'name',\r\n          prop: 'name',\r\n          width: '500',\r\n          slotname: 'name'\r\n        },\r\n        {\r\n          label: 'age',\r\n          prop: 'age',\r\n          width: '200'\r\n        },\r\n        {\r\n          label: 'country',\r\n          prop: 'country',\r\n          width: '200'\r\n        },\r\n        {\r\n          label: 'city',\r\n          prop: 'city',\r\n          width: '200'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleDataSearch () {\r\n      console.log(this.searchModel)\r\n    },\r\n    /**\r\n     * 粘贴操作\r\n     */\r\n    handleDataPaste (rowIndex, column, event) {\r\n      let clipboardData = event.clipboardData || window.clipboardData\r\n      let clipboardDataText = clipboardData.getData('Text')\r\n      let dataMatrix = this.$utils.matrix(clipboardDataText)\r\n\r\n      let columnName = column.property\r\n      // TODO: 需要去除 fixed 列\r\n      let columnIndex = this.tableColumns.findIndex(item => item.prop === columnName)\r\n      let insertColumns = this.$utils.drop(this.tableColumns, columnIndex)\r\n      let insertColumnsNameList = insertColumns.map(item => item.prop)\r\n\r\n      for (let index = 0; index < dataMatrix.length; index++) {\r\n        // 获取指定行数据\r\n        let currentRowData = JSON.parse(JSON.stringify(this.tableData[index + rowIndex] || {}))\r\n\r\n        let rowData = dataMatrix[index]\r\n\r\n        for (let colIndex = 0; colIndex < rowData.length; colIndex++) {\r\n          const cellValue = rowData[colIndex]\r\n          if (!insertColumnsNameList[colIndex]) continue\r\n          currentRowData[insertColumnsNameList[colIndex]] = cellValue\r\n        }\r\n\r\n        this.tableData.splice(index + rowIndex, 1, currentRowData)\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./table-with-copycell.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./table-with-copycell.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./table-with-copycell.vue?vue&type=template&id=11955a66&scoped=true&\"\nimport script from \"./table-with-copycell.vue?vue&type=script&lang=js&\"\nexport * from \"./table-with-copycell.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"11955a66\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}